{{define "content"}}
<!DOCTYPE html>
<html lang="en-gb">
<head>
    <title>Edit To Do item</title>
</head>
<Body>
<h2>Edit To Do item</h2>

    <div style="display: flex; align-items: center;">

    {{if .IsComplete}}
        <svg width="30px" height="30px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g id="Interface / Checkbox_Check">
                    <path id="Vector"
                          d="M8 12L11 15L16 9M4 16.8002V7.2002C4 6.08009 4 5.51962 4.21799 5.0918C4.40973 4.71547 4.71547 4.40973 5.0918 4.21799C5.51962 4 6.08009 4 7.2002 4H16.8002C17.9203 4 18.4796 4 18.9074 4.21799C19.2837 4.40973 19.5905 4.71547 19.7822 5.0918C20 5.5192 20 6.07899 20 7.19691V16.8036C20 17.9215 20 18.4805 19.7822 18.9079C19.5905 19.2842 19.2837 19.5905 18.9074 19.7822C18.48 20 17.921 20 16.8031 20H7.19691C6.07899 20 5.5192 20 5.0918 19.7822C4.71547 19.5905 4.40973 19.2842 4.21799 18.9079C4 18.4801 4 17.9203 4 16.8002Z"
                          stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </g>
            </svg>


    {{else}}
        <svg width="30px" height="30px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M6 5C5.44772 5 5 5.44772 5 6V13V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V13V6C19 5.44772 18.5523 5 18 5H6ZM3 6C3 4.34315 4.34315 3 6 3H18C19.6569 3 21 4.34315 21 6V13V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V13V6Z"
                      fill="#000000"/>
            </svg>
    {{end}}
    <h3>{{.Title}}</h3>
    </div>
<form id="updateForm" method="POST">
    <fieldset>
        <legend>Edit To Do item</legend>

        <div>
            <label for="title">Title of To Do item</label>
            <input id="title" name="title" type="text" placeholder="Wash dishes">
            <label for="isComplete">To Do item completion status</label>
            <input id="isComplete" name="isComplete" type="checkbox">
        </div>

        <div>
            <input type="submit" value="Submit">
        </div>
    </fieldset>
</form>

</Body>
<!--suppress JSUnresolvedReference -->
<script>

    const parseFormData = async (data)=>{
        return await data.json();
    }

    const populateForm = (data) => {
        console.log(data)
        document.getElementById("title").value = data.title;

        const isComplete = data.isComplete;

        if (isComplete) {
            document.getElementById("isComplete").checked=true;
        }
    }


    const itemId = ()=>{
        const currentUrl = window.location.href;
        const id = currentUrl.split('/').pop()
        return parseInt(id)
    }

    window.onload = async () => {
        try {
            console.log(itemId())
            const existingItemResponse = await fetch(`http://localhost:8085/api/get/${itemId()}`, {
                method: 'GET',
            });

            const result = await existingItemResponse;
            if (result.status === 200) {

                const resultAsJson = await parseFormData(result);

                populateForm(resultAsJson)
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    document.getElementById("updateForm").addEventListener('submit', async event => {
        event.preventDefault(); // Prevent the default form submission

        const form = event.target;
        const formData = new FormData(form);

        const jsonData = {}

        formData.forEach((value, key) => {
            console.log("value, key", value, key);
            jsonData[key] = value;
        });

        jsonData["id"] = itemId()
        jsonData["isComplete"] = document.getElementById("isComplete").checked

        try {
            const response = await fetch('http://localhost:8085/api/edit', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(jsonData)
            });

            const result = await response;
            if (result.status === 200) {
                window.location.reload();
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
</script>
</html>
{{end}}